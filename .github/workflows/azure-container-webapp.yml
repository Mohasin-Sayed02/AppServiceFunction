name: Build, push and deploy container app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOCKER_IMAGE: '${{ vars.REGISTRY_SOURCE }}/${{ vars.AZURE_USERNAME }}/${{ vars.REGISTRY_IMAGE }}'

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Build with Maven
        run: mvn clean package

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY_SOURCE }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}


      - name: Build and Push to ACR
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: '${{env.DOCKER_IMAGE}}:${{ github.run_number }}, ${{env.DOCKER_IMAGE}}:latest'
          file: Dockerfile

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up kubectl
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ vars.AKS_CLUSTER_NAME }}
          resource-group: ${{ vars.AZURE_RESOURCE_GROUP }}

      - name: Update Image Tag in Deployment File
        run: |
          sed -i "s|\${IMAGE_TAG}|${{ github.run_number }}|g" deploy/deployment.template.yml
        env:
          REGISTRY_SOURCE: ${{ vars.REGISTRY_SOURCE }}
          AZURE_USERNAME: ${{ vars.AZURE_USERNAME }}
          REGISTRY_IMAGE: ${{ vars.REGISTRY_IMAGE }}

      - name: Apply ConfigMap and Deployment
        run: |
          kubectl apply -f deploy/configmap.template.yml
          kubectl apply -f deploy/deployment.template.yml