name: Build and Deploy to AKS

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up JDK
    - name: Set up JDK 23
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 23

    # Build the application
    - name: Build Application
      run: mvn clean package

    # Log in to Azure CLI
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Log in to Azure Container Registry
    - name: Log in to ACR
      run: az acr login --name ${{ vars.AZURE_CONTAINER_REGISTRY }}

    # Build and push Docker image to ACR
    - name: Build and Push Docker Image
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t ${{ vars.AZURE_CONTAINER_REGISTRY }}/testapp:${{ github.sha }} .
        docker push ${{ vars.AZURE_CONTAINER_REGISTRY }}/testapp:${{ github.sha }}

    # Generate ConfigMap and Secrets dynamically using environment variables
    - name: Generate ConfigMap and Secrets
      env:
        DATABASE_URL: ${{ env.DATABASE_URL }}
        DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      run: |
        # Replace placeholders in ConfigMap
        envsubst < deploy/configmap.template.yml > deploy/configmap.yml
        cat deploy/configmap.yml

        # Replace placeholders in Secrets
        envsubst < deploy/secrets.template.yml > deploy/secrets.yml
        cat deploy/secrets.yml

    - name: Update Image Tag in Deployment Manifest
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        sed -i "s|<IMAGE_TAG>|${IMAGE_TAG}|g" deploy/deployment.yml
        cat deploy/deployment.yml

    #Authentication with AKS
    - name: Set up kubectl
      uses: azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: ${{ vars.AKS_CLUSTER_NAME }}
        resource-group: ${{ vars.AZURE_RESOURCE_GROUP }}

    # Apply Kubernetes manifests
    - name: Deploy to AKS
      run: |
        kubectl apply -f deploy/configmap.yml
        kubectl apply -f deploy/secrets.yml
        kubectl apply -f deploy/deployment.yml
        kubectl apply -f deploy/service.template.yml
